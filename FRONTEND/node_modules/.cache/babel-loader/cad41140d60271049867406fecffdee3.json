{"ast":null,"code":"import _objectSpread from \"/home/lcnghia/Desktop/STORY/newtechh/FRONTEND/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nlet redux = require('redux');\n\nlet isAuthenticate = '';\nlet username = '';\nlet role = '';\nlet selectType = null;\nlet user = localStorage.getItem('userStory');\n\nif (user != null) {\n  isAuthenticate = JSON.parse(user).isAuthenticate ? JSON.parse(user).isAuthenticate : '';\n  username = JSON.parse(user).isAuthenticate ? JSON.parse(user).username : '';\n  role = JSON.parse(user).isAuthenticate ? JSON.parse(user).role : ''; //selectType = JSON.parse(user).isAuthenticate ? JSON.parse(user).selectType : null;\n}\n\nlet InitialState = {\n  isAuthenticate,\n  username,\n  role,\n  selectType\n};\n\nconst allReducer = (state = InitialState, action) => {\n  switch (action.type) {\n    case \"IS_AUTHENTICATE\":\n      localStorage.setItem('userStory', JSON.stringify({\n        isAuthenticate: true,\n        username: action.username,\n        role: action.role\n      }));\n      return {\n        isAuthenticate: true,\n        username: action.username,\n        role: action.role\n      };\n\n    case \"IS_LOGOUT\":\n      localStorage.setItem('userStory', JSON.stringify({\n        isAuthenticate: false,\n        username: '',\n        role: ''\n      }));\n      return {\n        isAuthenticate: false,\n        username: '',\n        role: ''\n      };\n\n    case \"SELECT_TYPE\":\n      return {\n        selectType: action.typeSelect\n      };\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nlet store = redux.createStore(allReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nstore.subscribe(function () {\n  console.log(JSON.stringify(store.getState().selectType));\n});\nexport default store;","map":{"version":3,"sources":["/home/lcnghia/Desktop/STORY/newtechh/FRONTEND/frontend/src/store/store.js"],"names":["redux","require","isAuthenticate","username","role","selectType","user","localStorage","getItem","JSON","parse","InitialState","allReducer","state","action","type","setItem","stringify","typeSelect","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","console","log","getState"],"mappings":";;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,cAAc,GAAG,EAArB;AACA,IAAIC,QAAQ,GAAI,EAAhB;AACA,IAAIC,IAAI,GAAI,EAAZ;AACA,IAAIC,UAAU,GAAG,IAAjB;AACA,IAAIC,IAAI,GAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAV;;AACA,IAAGF,IAAI,IAAE,IAAT,EAAc;AACVJ,EAAAA,cAAc,GAAGO,IAAI,CAACC,KAAL,CAAWJ,IAAX,EAAiBJ,cAAjB,GAAkCO,IAAI,CAACC,KAAL,CAAWJ,IAAX,EAAiBJ,cAAnD,GAAoE,EAArF;AACAC,EAAAA,QAAQ,GAAIM,IAAI,CAACC,KAAL,CAAWJ,IAAX,EAAiBJ,cAAjB,GAAkCO,IAAI,CAACC,KAAL,CAAWJ,IAAX,EAAiBH,QAAnD,GAA8D,EAA1E;AACAC,EAAAA,IAAI,GAAIK,IAAI,CAACC,KAAL,CAAWJ,IAAX,EAAiBJ,cAAjB,GAAkCO,IAAI,CAACC,KAAL,CAAWJ,IAAX,EAAiBF,IAAnD,GAA0D,EAAlE,CAHU,CAIV;AACH;;AACD,IAAIO,YAAY,GAAG;AAEfT,EAAAA,cAFe;AAGfC,EAAAA,QAHe;AAIfC,EAAAA,IAJe;AAKfC,EAAAA;AALe,CAAnB;;AASA,MAAMO,UAAU,GAAG,CAACC,KAAK,GAACF,YAAP,EAAoBG,MAApB,KAA6B;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAM,iBAAN;AACIR,MAAAA,YAAY,CAACS,OAAb,CAAqB,WAArB,EAAiCP,IAAI,CAACQ,SAAL,CAAe;AAACf,QAAAA,cAAc,EAAC,IAAhB;AAAqBC,QAAAA,QAAQ,EAAEW,MAAM,CAACX,QAAtC;AAA+CC,QAAAA,IAAI,EAACU,MAAM,CAACV;AAA3D,OAAf,CAAjC;AACA,aAAO;AAACF,QAAAA,cAAc,EAAC,IAAhB;AAAqBC,QAAAA,QAAQ,EAAEW,MAAM,CAACX,QAAtC;AAA+CC,QAAAA,IAAI,EAACU,MAAM,CAACV;AAA3D,OAAP;;AACJ,SAAK,WAAL;AACIG,MAAAA,YAAY,CAACS,OAAb,CAAqB,WAArB,EAAiCP,IAAI,CAACQ,SAAL,CAAe;AAACf,QAAAA,cAAc,EAAG,KAAlB;AAAwBC,QAAAA,QAAQ,EAAG,EAAnC;AAAsCC,QAAAA,IAAI,EAAC;AAA3C,OAAf,CAAjC;AACA,aAAO;AAACF,QAAAA,cAAc,EAAG,KAAlB;AAAwBC,QAAAA,QAAQ,EAAG,EAAnC;AAAsCC,QAAAA,IAAI,EAAC;AAA3C,OAAP;;AACJ,SAAK,aAAL;AACI,aAAO;AAACC,QAAAA,UAAU,EAACS,MAAM,CAACI;AAAnB,OAAP;;AACJ;AACI,+BAAWL,KAAX;AAVR;AAaH,CAdD;;AAgBA,IAAIM,KAAK,GAAGnB,KAAK,CAACoB,WAAN,CAAkBR,UAAlB,EAA6BS,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAApE,CAAZ;AACAH,KAAK,CAACI,SAAN,CAAgB,YAAU;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAI,CAACQ,SAAL,CAAeE,KAAK,CAACO,QAAN,GAAiBrB,UAAhC,CAAZ;AACH,CAFD;AAGA,eAAec,KAAf","sourcesContent":["let redux = require('redux');\r\nlet isAuthenticate = '';\r\nlet username  = '';\r\nlet role  = '';\r\nlet selectType = null;\r\nlet user =localStorage.getItem('userStory');\r\nif(user!=null){\r\n    isAuthenticate = JSON.parse(user).isAuthenticate ? JSON.parse(user).isAuthenticate : '';\r\n    username  = JSON.parse(user).isAuthenticate ? JSON.parse(user).username : '';\r\n    role  = JSON.parse(user).isAuthenticate ? JSON.parse(user).role : '';\r\n    //selectType = JSON.parse(user).isAuthenticate ? JSON.parse(user).selectType : null;\r\n}\r\nlet InitialState = { \r\n  \r\n    isAuthenticate ,\r\n    username,\r\n    role,\r\n    selectType\r\n  \r\n}\r\n\r\nconst allReducer = (state=InitialState,action)=>{\r\n    switch(action.type){\r\n        case  \"IS_AUTHENTICATE\" :\r\n            localStorage.setItem('userStory',JSON.stringify({isAuthenticate:true,username :action.username,role:action.role}))\r\n            return {isAuthenticate:true,username :action.username,role:action.role};\r\n        case \"IS_LOGOUT\" :\r\n            localStorage.setItem('userStory',JSON.stringify({isAuthenticate : false,username : '',role:''}))    \r\n            return {isAuthenticate : false,username : '',role:''};\r\n        case \"SELECT_TYPE\":\r\n            return {selectType:action.typeSelect}\r\n        default : \r\n            return {...state};\r\n\r\n    }\r\n}\r\n\r\nlet store = redux.createStore(allReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nstore.subscribe(function(){\r\n    console.log(JSON.stringify(store.getState().selectType));\r\n})\r\nexport default store;"]},"metadata":{},"sourceType":"module"}