{"ast":null,"code":"var _jsxFileName = \"/home/lcnghia/Desktop/STORY/newtechh/FRONTEND/frontend/src/pages/LoginPage.js\";\nimport React, { Component } from 'react';\nimport callApi from './../apicall/apiCaller';\nimport { connect } from 'react-redux';\nimport { GoogleLogin } from 'react-google-login';\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      let name = event.target.name;\n      let value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = () => {\n      callApi(`api/authenticate`, 'POST', {\n        username: this.state.username,\n        password: this.state.password\n      }).then(res => {\n        if (res.data) {\n          if (res.data.token) {\n            this.props.onLogin(res.data.token, res.data.role, res.data.username);\n            this.props.selectType(null);\n          }\n        }\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"/action_page.php\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"vl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"vl-innertext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"or\")), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"fb btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-facebook fa-fw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), \" Login with Facebook\"), React.createElement(\"a\", {\n      onClick: () => console.log('google'),\n      className: \"google btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-google fa-fw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), \" Login with Google+\")), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"hide-md-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Or sign in manually:\")), React.createElement(\"input\", {\n      onChange: event => this.onChange(event),\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: event => this.onChange(event),\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onClick: () => this.onSubmit(),\n      type: \"button\",\n      defaultValue: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"bottom-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      style: {\n        color: 'white'\n      },\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Sign up\")), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      style: {\n        color: 'white'\n      },\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Forgot password?\")))), React.createElement(GoogleLogin, {\n      clientId: \"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\",\n      render: renderProps => React.createElement(\"button\", {\n        onClick: renderProps.onClick,\n        disabled: renderProps.disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"This is my custom Google button\"),\n      buttonText: \"Login\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      cookiePolicy: 'single_host_origin',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onLogin: (token, role, username) => {\n      dispatch({\n        type: \"IS_AUTHENTICATE\",\n        token,\n        role,\n        username\n      });\n    },\n    selectType: typeSelect => {\n      dispatch({\n        type: \"SELECT_TYPE\",\n        typeSelect\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginPage);","map":{"version":3,"sources":["/home/lcnghia/Desktop/STORY/newtechh/FRONTEND/frontend/src/pages/LoginPage.js"],"names":["React","Component","callApi","connect","GoogleLogin","LoginPage","constructor","props","onChange","event","name","target","value","setState","onSubmit","username","state","password","then","res","data","token","onLogin","role","selectType","render","console","log","color","renderProps","onClick","disabled","responseGoogle","mapDispatchToProps","dispatch","type","typeSelect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,QARmB,GAQPC,KAAD,IAAW;AACpB,UAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAAxB;AACA,UAAIE,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAAzB;AACA,WAAKC,QAAL,CAAc;AACZ,SAACH,IAAD,GAAQE;AADI,OAAd;AAGD,KAdkB;;AAAA,SAenBE,QAfmB,GAeR,MAAM;AACfZ,MAAAA,OAAO,CAAE,kBAAF,EAAqB,MAArB,EAA6B;AAClCa,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QADa;AAElCE,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAFa,OAA7B,CAAP,CAGGC,IAHH,CAGQC,GAAG,IAAI;AACb,YAAIA,GAAG,CAACC,IAAR,EAAc;AACZ,cAAID,GAAG,CAACC,IAAJ,CAASC,KAAb,EAAoB;AAClB,iBAAKd,KAAL,CAAWe,OAAX,CAAmBH,GAAG,CAACC,IAAJ,CAASC,KAA5B,EAAmCF,GAAG,CAACC,IAAJ,CAASG,IAA5C,EAAkDJ,GAAG,CAACC,IAAJ,CAASL,QAA3D;AACA,iBAAKR,KAAL,CAAWiB,UAAX,CAAsB,IAAtB;AAED;AACF;AACF,OAXD;AAYD,KA5BkB;;AAEjB,SAAKR,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE,EADC;AAEXE,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAwBDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,MAAM,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,yBADF,EAIE;AAAG,MAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAlB;AAAyC,MAAA,SAAS,EAAC,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgE;AAAG,MAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhE,wBAJF,CAJF,EAYE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,EAIE;AAAO,MAAA,QAAQ,EAAGlB,KAAD,IAAW,KAAKD,QAAL,CAAcC,KAAd,CAA5B;AAAkD,MAAA,IAAI,EAAC,MAAvD;AAA8D,MAAA,IAAI,EAAC,UAAnE;AAA8E,MAAA,WAAW,EAAC,UAA1F;AAAqG,MAAA,QAAQ,MAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAO,MAAA,QAAQ,EAAGA,KAAD,IAAW,KAAKD,QAAL,CAAcC,KAAd,CAA5B;AAAkD,MAAA,IAAI,EAAC,UAAvD;AAAkE,MAAA,IAAI,EAAC,UAAvE;AAAkF,MAAA,WAAW,EAAC,UAA9F;AAAyG,MAAA,QAAQ,MAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAO,MAAA,OAAO,EAAE,MAAM,KAAKK,QAAL,EAAtB;AAAuC,MAAA,IAAI,EAAC,QAA5C;AAAqD,MAAA,YAAY,EAAC,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAZF,CADF,CADF,CADF,EA0BE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,KAAK,EAAE;AAAEc,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAuC,MAAA,SAAS,EAAC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAuC,MAAA,SAAS,EAAC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAJF,CADF,CA1BF,EAoCE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAC,0EADX;AAEE,MAAA,MAAM,EAAEC,WAAW,IACjB;AAAQ,QAAA,OAAO,EAAEA,WAAW,CAACC,OAA7B;AAAsC,QAAA,QAAQ,EAAED,WAAW,CAACE,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAHJ;AAKE,MAAA,UAAU,EAAC,OALb;AAME,MAAA,SAAS,EAAEC,cANb;AAOE,MAAA,SAAS,EAAEA,cAPb;AAQE,MAAA,YAAY,EAAE,oBARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCF,CADF;AAiDD;;AAjF+B;;AAoFlC,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAW3B,KAAX,KAAqB;AAC9C,SAAO;AACLe,IAAAA,OAAO,EAAE,CAACD,KAAD,EAAQE,IAAR,EAAcR,QAAd,KAA2B;AAClCmB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,iBADC;AAEPd,QAAAA,KAFO;AAEAE,QAAAA,IAFA;AAEMR,QAAAA;AAFN,OAAD,CAAR;AAID,KANI;AAOLS,IAAAA,UAAU,EAAGY,UAAD,IAAgB;AAC1BF,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,aADC;AAEPC,QAAAA;AAFO,OAAD,CAAR;AAID;AAZI,GAAP;AAcD,CAfD;;AAiBA,eAAejC,OAAO,CAAC,IAAD,EAAO8B,kBAAP,CAAP,CAAkC5B,SAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport callApi from './../apicall/apiCaller'\nimport { connect } from 'react-redux'\nimport { GoogleLogin } from 'react-google-login'\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    }\n  }\n\n  onChange = (event) => {\n    let name = event.target.name;\n    let value = event.target.value;\n    this.setState({\n      [name]: value\n    })\n  }\n  onSubmit = () => {\n    callApi(`api/authenticate`, 'POST', {\n      username: this.state.username,\n      password: this.state.password\n    }).then(res => {\n      if (res.data) {\n        if (res.data.token) {\n          this.props.onLogin(res.data.token, res.data.role, res.data.username)\n          this.props.selectType(null)\n\n        }\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <form action=\"/action_page.php\">\n            <div className=\"row\">\n              <div className=\"vl\">\n                <span className=\"vl-innertext\">or</span>\n              </div>\n              <div className=\"col\">\n                <a className=\"fb btn\">\n                  <i className=\"fa fa-facebook fa-fw\" /> Login with Facebook\n                      </a>\n                <a onClick={() => console.log('google')} className=\"google btn\"><i className=\"fa fa-google fa-fw\">\n                </i> Login with Google+\n                      </a>\n              </div>\n              <div className=\"col\">\n                <div className=\"hide-md-lg\">\n                  <p>Or sign in manually:</p>\n                </div>\n                <input onChange={(event) => this.onChange(event)} type=\"text\" name=\"username\" placeholder=\"Username\" required />\n                <input onChange={(event) => this.onChange(event)} type=\"password\" name=\"password\" placeholder=\"Password\" required />\n                <input onClick={() => this.onSubmit()} type=\"button\" defaultValue=\"Login\" />\n              </div>\n            </div>\n          </form>\n        </div>\n        <div className=\"bottom-container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <a href=\"#\" style={{ color: 'white' }} className=\"btn\">Sign up</a>\n            </div>\n            <div className=\"col\">\n              <a href=\"#\" style={{ color: 'white' }} className=\"btn\">Forgot password?</a>\n            </div>\n          </div>\n        </div>\n        <GoogleLogin\n          clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\n          render={renderProps => (\n            <button onClick={renderProps.onClick} disabled={renderProps.disabled}>This is my custom Google button</button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy={'single_host_origin'}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onLogin: (token, role, username) => {\n      dispatch({\n        type: \"IS_AUTHENTICATE\",\n        token, role, username\n      })\n    },\n    selectType: (typeSelect) => {\n      dispatch({\n        type: \"SELECT_TYPE\",\n        typeSelect\n      })\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(LoginPage);"]},"metadata":{},"sourceType":"module"}